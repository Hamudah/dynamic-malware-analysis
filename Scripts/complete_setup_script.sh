#!/bin/bash

#Name of the virtual machines
VM_NAME1="FTP_SERVER"
VM_NAME2="WindowsMalware"

#Name of the distros
VM_OSTYPE1="Ubuntu22_LTS_64"
VM_OSTYPE2="Windows10_32"

#Location of the virtual machine disk in MB
VM_DISK1="D:/VM_HDD/$VM_NAME1.vdi" 
VM_DISK2="D:/VM_HDD/$VM_NAME2.vdi" 

#VBoxManage Pfad
VBOXMANAGE_EXECUTABLE="/mnt/c/Program Files/Oracle/VirtualBox/VBoxManage.exe"

#####################################################
#Windows

#Delete VM with same name if it exists, otherwise create new one
"$VBOXMANAGE_EXECUTABLE" unregistervm $VM_NAME2 --delete 
"$VBOXMANAGE_EXECUTABLE" createvm --name $VM_NAME2 --register

#define OS TYPE
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME2 --ostype $VM_OSTYPE2

#define vm specs
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME2 --cpus 4 --memory 4096 --vram 128

#define network settings; Here internal network call MalwareAnalysis
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME2 --nic1 intnet --intnet1 MalwareAnalysis

#Change graphic Controll, since standard is VboxVGA which flickers
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME2 --graphicscontroller vmsvga

#create hdd and define path
"$VBOXMANAGE_EXECUTABLE" createhd --filename $VM_DISK2 --size 100000 --variant Standard
"$VBOXMANAGE_EXECUTABLE" storagectl $VM_NAME2 --name "SATA Controller" --add sata --controller IntelAHCI
"$VBOXMANAGE_EXECUTABLE" storageattach $VM_NAME2 --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium $VM_DISK2

# Attach ISO file
"$VBOXMANAGE_EXECUTABLE" storageattach $VM_NAME2 --storagectl "SATA Controller" --port 1 --device 0 --type dvddrive --medium "D:\VM_ISO\Win10_22H2_German_x32.iso"

#Define Boot Order
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME2 --boot1 dvd --boot2 disk --boot3 none --boot4 none

##################################################################################################################################
#Ubunutu FTP

#Delete VM with same name if it exists, otherwise create new one
"$VBOXMANAGE_EXECUTABLE" unregistervm $VM_NAME1 --delete 
"$VBOXMANAGE_EXECUTABLE" createvm --name $VM_NAME1 --register

#define OS TYPE
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME1 --ostype $VM_OSTYPE1

#define vm specs
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME1 --cpus 4 --memory 4096 --vram 128

#define network settings; Here internal network call MalwareAnalysis
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME1 --nic1 intnet --intnet1 MalwareAnalysis

#Change graphic Controll, since standard is VboxVGA which flickers
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME1 --graphicscontroller vmsvga

#create hdd and define path
"$VBOXMANAGE_EXECUTABLE" createhd --filename $VM_DISK1 --size 32768
"$VBOXMANAGE_EXECUTABLE" storagectl $VM_NAME1 --name "SATA Controller" --add sata --controller IntelAHCI
"$VBOXMANAGE_EXECUTABLE" storageattach $VM_NAME1 --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium $VM_DISK1

#Attach ISO file
"$VBOXMANAGE_EXECUTABLE" storageattach $VM_NAME1 --storagectl "SATA Controller" --port 1 --device 0 --type dvddrive --medium "D:\VM_ISO\ubuntu-22.04.1-desktop-amd64.iso"

#Define Boot Order
"$VBOXMANAGE_EXECUTABLE" modifyvm $VM_NAME1 --boot1 dvd --boot2 disk --boot3 none --boot4 none

#Start VM
"$VBOXMANAGE_EXECUTABLE" startvm $VM_NAME1 --type headless

# Take a snapshot of the Windows10 VM
"$VBOXMANAGE_EXECUTABLE" snapshot "Windows10" take "Initial Snapshot"

# Start both VMs
"$VBOXMANAGE_EXECUTABLE" startvm $VM_NAME1 --type headless
"$VBOXMANAGE_EXECUTABLE" startvm $VM_NAME2 --type headless

# Run malware in Windows VM
#VBoxManage guestcontrol "Windows10" run --exe "C:\\malware.exe" --username "User" --password "Pass"

# Wait for one minute
#sleep 60

# Gather data about malware using Intel Pin Tool
#VBoxManage guestcontrol "Windows10" run --exe "C:\\pin.exe" --username "User" --password "Pass" -- C:\\malware.exe

# Send data to Ubuntu VM via FTP
#ncftpput -R -v -u "User" -p "Pass" IP_ADDRESS /local/path/ malware-data.txt /remote/path/

# Revert the Windows10 VM back to the snapshot
#VBoxManage snapshot "Windows10" restorecurrent
