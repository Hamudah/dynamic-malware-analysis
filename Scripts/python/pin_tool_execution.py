import subprocess
import os
import time
import shutil
import csv

def execute_pin_command(software_name, command):
    pin_tool_dir = r'D:\BA\Intel Pin Tool\pin-3.26-98690-g1fc9d60e6-msvc-windows\source\tools\masmPinTool'
    vcvarsall_path = r'C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat'
    vcvarsall_cmd = f'"{vcvarsall_path}" x64 > nul && '
    pin_cmd = f'{vcvarsall_cmd} pin -t obj-intel64/MyPinTool.dll -tsc 1 -os test.csv -to 40 -- {command}'

    output_dir = os.path.join(os.getcwd(), 'Windows System Call API', 'Goodware')
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    original_dir = os.getcwd()
    os.chdir(pin_tool_dir)

    with open(os.devnull, 'w') as devnull:
        subprocess.run(pin_cmd, shell=True, stderr=devnull, stdout=devnull)

    os.chdir(original_dir)

    if os.path.exists(os.path.join(pin_tool_dir, 'test.csv')):
        output_file = os.path.join(output_dir, f'{software_name}.csv')
        shutil.move(os.path.join(pin_tool_dir, 'test.csv'), output_file)
    else:
        print(f"Error: 'test.csv' not generated for {software_name}. Check your pin command and the software command.")


def main():
    goodware_list_file = 'config_files\goodware.csv'

    # Read the goodware list
    with open(goodware_list_file, 'r') as f:
        reader = csv.reader(f)
        next(reader)  # Skip the header row

        # Execute the pin command for each goodware and save the output
        for row in reader:
            if not row:
                continue

            software_name, *command_args = row
            command = ' '.join([arg.strip('\"') for arg in command_args if arg])
            print(f'Running for {software_name}...')
            execute_pin_command(software_name, command)
            print(f'Completed for {software_name}')
            time.sleep(1)


if __name__ == '__main__':
    main()