import virtualbox
import time
from virtualbox.library import MachineState, SessionState, LockType
import sys

# Check if the number of command line arguments is correct
if len(sys.argv) != 2:
    print("Usage: python power_on_vms_loop.py <num_files>")
    sys.exit(1)

# Parse the number of times to execute the script from the command line argument
num_files = int(sys.argv[1])

#Connect to the VirtualBox API
vbox = virtualbox.VirtualBox()

#Find the Ubuntu and Windows VM
ubuntu_machine = vbox.find_machine("FTP_SERVER2")
windows_machine = vbox.find_machine("WindowsMalware2")

# Close any existing sessions on the Ubuntu machine
ubuntu_session = virtualbox.Session()
ubuntu_machine.lock_machine(ubuntu_session, LockType.shared)
if ubuntu_session.state == SessionState.locked:
    ubuntu_session.unlock_machine()
print("Closed existing sessions on Ubuntu machine")

#Start the Ubuntu VM
ubuntu_machine.launch_vm_process(ubuntu_session, "gui", [])
print("Started Ubuntu virtual machine")
time.sleep(5)


# Loop to execute the script X number of times
for i in range(num_files):

# Close any existing sessions on the Windows machine
    windows_session = virtualbox.Session()
    windows_machine.lock_machine(windows_session, LockType.shared)
    if windows_session.state == SessionState.locked:
        windows_session.unlock_machine()
        print("Closed existing sessions on Windows machine")
        time.sleep(3)

# Start the Windows virtual machine
    windows_machine.launch_vm_process(windows_session, "gui", [])
    print("Started Windows virtual machine")

    # Wait for the virtual machines to boot up
    print("Script starts in 45 seconds...")
    time.sleep(45)

    # Generate the name of the text file based on the current loop counter
    text_file_name = f"test_{i+1}.txt"

    # Execute the script on the Ubuntu machine that connects to the Windows machine and executes a script on the Windows machine
    guest_session = ubuntu_session.console.guest.create_session("hamud", "hamud", "", "")
    process, stdout, stderr = guest_session.execute("/bin/bash", ["/home/hamud/Schreibtisch/BA/dynamic-malware-analysis/Scripts/execute_malware.sh", text_file_name])
    process.wait_for(8, 30000)
    print(f"Executed the Script {i+1} times!")
    print(stdout.decode())

    #Shutdown the Windows Machine
    process, stdout, stderr = guest_session.execute("/bin/bash", ["/home/hamud/Schreibtisch/BA/dynamic-malware-analysis/Scripts/shutdown.sh"])
    time.sleep(30)
    while windows_machine.state != MachineState.powered_off:
        print("Current state:", windows_machine.state) 

    # Reset the Windows machine to a snapshot
    if windows_session.state == virtualbox.library.SessionState.locked:
        windows_session.unlock_machine()
    windows_machine.lock_machine(windows_session, virtualbox.library.LockType.shared)
    print("Start restoring Snapshot from the Windows machine")
    snapshot = windows_machine.find_snapshot("Base Snapshot")
    progress = windows_session.machine.restore_snapshot(snapshot)
    progress.wait_for_completion()
    windows_session.unlock_machine()
    print("Windows machine restored to snapshot")